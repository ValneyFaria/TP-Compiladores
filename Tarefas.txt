Definir funçoes pra identificar o tipo dos textos recebidos
Ler tudo, indentificar os lexemas e transformar eles em tokens
Definir uma estrutura para armazenar separadores, operadores, palavras reservadas

Verde

Ir lendo o source e colando os caracteres numa string
Verificar o casamento
Adicionar a lista de tokens


if (ch == ' ' || ch == '\t' || ch == '\r' || ch == '\n' || ch == '\x0b') {
    // ...
}

	/*
	 * self.listaTokens = {'separadores':[' ', '\n', '\t', '(',
	 * ')','{','}',',',';','\r'],
	 * 'operadores':['+','-','*','/','=','<','<=','>','>=','==','!=','&&','||'],
	 * 'reservadas':['main','int','float','if','else','while','read','print'],
	 * 'inteiro': [], 'float': [], 'identificadores':[], 'identificadores1':[],
	 * 'ocorrencias':[], 'operadores1':[], 'separadores1':[], 'reservadas1':[],
	 * 'erros':[], 'tokens':[]}
	 */
	 
Pode ser adicionado em getChar();
		// if (s.equals("\n")) {
		// System.out.println("CHAR LIDO: BarraN");
		// }
		// if (Character.isSpaceChar((s.charAt(0)))) {
		// System.out.println("CHAR LIDO: SPACE");
		// }
		// if (s.equals("\t")) {
		// System.out.println("CHAR LIDO: TAB");
		// } else {
		// System.out.println("CHAR LIDO: " + s);
		// }